<h3> {{{message}}} </h3>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<div align="center"><a href="#" class="export">Export All transactions data into Excel / csv</a></div>

<div class="container">
<div style="display:none" id="dvData">
  <table class="table table-hover table-hover table-responsive">
    <thead>
      <tr>
        <th>ID</th>
        <th>Transaction Hash</th>
        <th>Amount</th>
        <th>Odin Token equivalent</th>
        <th>Token</th>
        <th>To Address</th>
        <th>Transaction Timestamp</th>
        <th>Status</th>
        <th>User ID</th>
        <th>From Address</th>
        <th>Status Message</th>
        <th>Is DB token</th>
        <th>is Premium</th>

      </tr>
    </thead>

    <tbody>
	<tr>
	<td>ID</td>
        <td>Transaction Hash</td>
        <td>Amount</td>
        <td>Odin Token equivalent</td>
        <td>Token</td>
        <td>To Address</td>
        <td>Transaction Timestamp</td>
        <td>Status</td>
        <td>User ID</td>
        <td>From Address</td>
        <td>Status Message</td>
        <td>Is DB token</td>
        <td>is Premium</td>
      {{#each users}}
	  </tr>
      <tr>
        <td> {{id}}</td>
        <td> {{tx_hash}}</td>
        <td> {{amount}}</td>
        <td> {{odin_token_equivalent}}</td>
        <td> {{token}}</td>
        <td> {{toAddress}}</td>
        <td> {{moment tx_timestamp "DD / MM / YYYY"}}</td>
        <td> {{status}}</td>
        <td> {{user_id}}</td>
        <td> {{fromAddress}}</td>
        <td> {{status_msg}}</td>
        <td> {{is_db_token}}</td>
        <td> {{is_premium}}</td>

      </tr>
      {{/each}}
    </tbody>

  </table>
</div>
</div>
<script>
$(document).ready(function() {

  function exportTableToCSV($table, filename) {

    var $rows = $table.find('tr:has(td)'),

      // Temporary delimiter characters unlikely to be typed by keyboard
      // This is to avoid accidentally splitting the actual contents
      tmpColDelim = String.fromCharCode(11), // vertical tab character
      tmpRowDelim = String.fromCharCode(0), // null character

      // actual delimiter characters for CSV format
      colDelim = '","',
      rowDelim = '"\r\n"',

      // Grab text from table into CSV formatted string
      csv = '"' + $rows.map(function(i, row) {
        var $row = $(row),
          $cols = $row.find('td');

        return $cols.map(function(j, col) {
          var $col = $(col),
            text = $col.text();

          return text.replace(/"/g, '""'); // escape double quotes

        }).get().join(tmpColDelim);

      }).get().join(tmpRowDelim)
      .split(tmpRowDelim).join(rowDelim)
      .split(tmpColDelim).join(colDelim) + '"';

    // Deliberate 'false', see comment below
    if (false && window.navigator.msSaveBlob) {

      var blob = new Blob([decodeURIComponent(csv)], {
        type: 'text/csv;charset=utf8'
      });

      // Crashes in IE 10, IE 11 and Microsoft Edge
      // See MS Edge Issue #10396033
      // Hence, the deliberate 'false'
      // This is here just for completeness
      // Remove the 'false' at your own risk
      window.navigator.msSaveBlob(blob, filename);

    } else if (window.Blob && window.URL) {
      // HTML5 Blob        
      var blob = new Blob([csv], {
        type: 'text/csv;charset=utf-8'
      });
      var csvUrl = URL.createObjectURL(blob);

      $(this)
        .attr({
          'download': filename,
          'href': csvUrl
        });
    } else {
      // Data URI
      var csvData = 'data:application/csv;charset=utf-8,' + encodeURIComponent(csv);

      $(this)
        .attr({
          'download': filename,
          'href': csvData,
          'target': '_blank'
        });
    }
  }

  // This must be a hyperlink
  $(".export").on('click', function(event) {
    // CSV
    var args = [$('#dvData>table'), 'all_transactions.csv'];

    exportTableToCSV.apply(this, args);

    // If CSV, don't do event.preventDefault() or return false
    // We actually need this to be a typical hyperlink
  });
});
</script>